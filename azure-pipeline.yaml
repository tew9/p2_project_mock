name: $(date:yyyyMMdd)$(rev:.rr) #Give it a name yaml variable with data and incrementing 2020330.00 untill 99

# trigger this pipeline when push to master
trigger:
  - master

# trigger this pipeline when pull request is open in the repository 
pr:
  - master

# Integration pipeline
stages:
  # - stage: build
  #   jobs:
  #     - job: build_mvc
  #       steps:
  #         - script: dotnet build Webflix/Webflix.MVC/*.csproj

  #     - job: build_api
  #       steps:
  #         - script: dotnet build Webflix/Webflix.API/*.csproj

  # - stage: test
  #   jobs:
  #     - job: test_mvc
  #     - job: test_api

  - stage: analyze
    jobs:
      - job: analyze_mvc
        pool: 
          vmImage: ubuntu-18.04
        steps:
          - task: DotnetGlobalToolInstaller@0
            inputs:
              name: "dotnet-sonarscanner"
          - script: |
              dotnet sonarscanner begin /k:"webflix_mvc1" /o:"tew9" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login2=$SONAR_LOGIN
              dotnet build Webflix/Webflix.MVC/*.csproj
              dotnet sonarscanner end /d:sonar.login2=$SONAR_LOGIN
            env:
              SONAR_LOGIN: $(sonar.login2)

      - job: analyze_api
        pool: 
          vmImage: ubuntu-18.04
        steps:
          - task: DotnetGlobalToolInstaller@0
            inputs:
              name: "dotnet-sonarscanner"
          - script: |
              dotnet sonarscanner begin /k:"webflix_api1" /o:"tew9" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login2=$SONAR_LOGIN
              dotnet build Webflix/Webflix.API/*.csproj
              dotnet test
              dotnet sonarscanner end /d:sonar.login2=$SONAR_LOGIN
            env:
              SONAR_LOGIN: $(sonar.login2)

  - stage: pack
    jobs:
      - job: pack_mvc
        steps:
          - task: Docker@2
            inputs:
              command: login
              containerRegistry: p2_docker
          - script: |
              docker image build --file .docker/mvc.dockerfile --tag tangotew/mvcproject Webflix/Webflix.MVC
              docker image push tangotew/mvcproject
          - task: Docker@2
            inputs:
              command: logout
              containerRegistry: p2_docker

      - job: pack_api
        steps:
        - task: Docker@2
          inputs:
            command: login
            containerRegistry: p2_docker
        - script: |
            docker image build --file .docker/api.dockerfile --tag tangotew/apiproject Webflix/Webflix.API
            docker image push tangotew/apiproject
        - task: Docker@2
          inputs:
            command: logout
            containerRegistry: p2_docker

  # - stage: deploy
#     jobs:
#       - job: deploy_app
#       - steps:
#           - task: DockerCompose@0
#               displayName: Run services
#               inputs:
#                 action: Run services
#                 azureSubscriptionEndpoint: $(azure.subscription)
#                 azureContainerRegistry: $(p2_azure)
#                 dockerComposeFile: docker-compose.yaml
#                 projectName: $(Build.Repository.Name)
#                 qualifyImageNames: true
#                 buildImages: false
#                 detached: false

